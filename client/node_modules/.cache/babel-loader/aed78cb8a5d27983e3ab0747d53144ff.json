{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\Downloads\\\\UJGH-App\\\\client\\\\src\\\\components\\\\layout\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.listenToScroll = () => {\n      const winScroll = document.body.scrollTop || document.documentElement.scrollTop;\n      const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = winScroll / height;\n      this.setState({\n        theposition: scrolled + 100\n      });\n    };\n\n    this.setIsOpen = () => this.setState({\n      isOpen: !this.state.isOpen\n    });\n\n    this.state = {\n      isOpen: false,\n      theposition: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll);\n  }\n\n  render() {\n    const top = window.pageYOffset;\n    const isOpen = this.state.isOpen;\n    const headerUpdate = top >= 100 ? true : false;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      style: {\n        position: 'fixed',\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      default: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      style: {\n        width: '30%'\n      },\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"logo\",\n      style: {\n        width: '100%'\n      },\n      className: \"logo\",\n      src: require('../../assets/logo.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(NavbarToggler, {\n      onClick: () => this.setIsOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: headerUpdate ? 'textMenu2' : 'textMenu1',\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Link, {\n      className: headerUpdate ? 'textMenu2' : 'textMenu1',\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Registrate\"), React.createElement(Link, {\n      className: headerUpdate ? 'textMenu2' : 'textMenu1',\n      to: \"/contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Contactos\"), React.createElement(Link, {\n      className: headerUpdate ? 'textMenu2' : 'textMenu1',\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Acerca\")))))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/Diego/Downloads/UJGH-App/client/src/components/layout/NavBar.js"],"names":["React","Component","Navbar","NavbarBrand","NavbarToggler","Collapse","Nav","NavItem","Link","NavBar","constructor","props","listenToScroll","winScroll","document","body","scrollTop","documentElement","height","scrollHeight","clientHeight","scrolled","setState","theposition","setIsOpen","isOpen","state","componentDidMount","window","addEventListener","render","top","pageYOffset","headerUpdate","position","width","backgroundColor","require"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      theposition: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.listenToScroll)\r\n  }\r\n\r\n  listenToScroll = () => {\r\n    const winScroll =\r\n      document.body.scrollTop || document.documentElement.scrollTop\r\n\r\n    const height =\r\n      document.documentElement.scrollHeight -\r\n      document.documentElement.clientHeight\r\n\r\n    const scrolled = winScroll / height\r\n\r\n    this.setState({\r\n      theposition: scrolled + 100,\r\n    })\r\n  }\r\n\r\n  setIsOpen = () => this.setState({ isOpen: !this.state.isOpen })\r\n  render() {\r\n    const top = window.pageYOffset;\r\n    const { isOpen } = this.state;\r\n    const headerUpdate = top >= 100 ? true : false;\r\n    return (\r\n      <div>\r\n        <Navbar style={{ position: 'fixed', width: '100%', backgroundColor: 'white' }} default expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarBrand style={{ width: '30%' }} href=\"/\"><img alt=\"logo\" style={{ width: '100%' }} className=\"logo\" src={require('../../assets/logo.png')}></img></NavbarBrand>\r\n            <NavbarToggler onClick={() => this.setIsOpen()} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Link className={headerUpdate ? 'textMenu2' : 'textMenu1'} to='/login'>Login</Link>\r\n                  <Link className={headerUpdate ? 'textMenu2' : 'textMenu1'} to='/register'>Registrate</Link>\r\n                  <Link className={headerUpdate ? 'textMenu2' : 'textMenu1'} to='/contact'>Contactos</Link>\r\n                  <Link className={headerUpdate ? 'textMenu2' : 'textMenu1'} to='/about'>Acerca</Link>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}
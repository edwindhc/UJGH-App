{"ast":null,"code":"import axios from 'axios';\nimport { header } from '../helpers';\n\nconst getCurrentUser = () => {\n  let local = JSON.parse(localStorage.getItem('user'));\n  return local.user;\n};\n\nfunction currentUser(input = '') {\n  let local = JSON.parse(localStorage.getItem('user'));\n\n  if (local) {\n    if (input === 'rol' || input === 'role') return local.user.role;\n    if (input === 'id') return local.user.id;\n    if (input === 'token') return local.token.accessToken;\n    return local;\n  }\n}\n\nconst listProyects = async user => {\n  try {\n    const userId = getCurrentUser().id;\n    console.log(userId, ' userId');\n    const getUser = await axios.get(\"/proyects?UserId=\".concat(userId), header());\n    if (getUser) return getUser;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst register = async user => {\n  const getUser = await axios.post('/auth/register', user);\n  if (getUser) localStorage.setItem('user', JSON.stringify(getUser.data));\n  return getUser;\n};\n\nconst login = async user => {\n  try {\n    const getUser = await axios.post('/auth/login', user);\n    if (getUser.status === 201 || getUser.status === 200) localStorage.setItem('user', JSON.stringify(getUser.data));\n    return getUser;\n  } catch (e) {\n    return {\n      status: 400,\n      message: 'No hay conexión con el servidor'\n    };\n  }\n};\n\nexport const auth = {\n  login,\n  register,\n  currentUser,\n  listProyects\n};","map":{"version":3,"sources":["C:/Users/Diego/Downloads/UJGH-App/client/src/services/auth.js"],"names":["axios","header","getCurrentUser","local","JSON","parse","localStorage","getItem","user","currentUser","input","role","id","token","accessToken","listProyects","userId","console","log","getUser","get","e","register","post","setItem","stringify","data","login","status","message","auth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACA,SAAOJ,KAAK,CAACK,IAAb;AACH,CAHD;;AAIA,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiC;AAC7B,MAAIP,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;;AACA,MAAIJ,KAAJ,EAAW;AACP,QAAIO,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,MAAjC,EAAyC,OAAOP,KAAK,CAACK,IAAN,CAAWG,IAAlB;AACzC,QAAID,KAAK,KAAK,IAAd,EAAoB,OAAOP,KAAK,CAACK,IAAN,CAAWI,EAAlB;AACpB,QAAIF,KAAK,KAAK,OAAd,EAAuB,OAAOP,KAAK,CAACU,KAAN,CAAYC,WAAnB;AACvB,WAAOX,KAAP;AACH;AACJ;;AAED,MAAMY,YAAY,GAAG,MAAOP,IAAP,IAAgB;AACjC,MAAI;AACA,UAAMQ,MAAM,GAAGd,cAAc,GAAGU,EAAhC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,SAApB;AACA,UAAMG,OAAO,GAAG,MAAMnB,KAAK,CAACoB,GAAN,4BAA8BJ,MAA9B,GAAwCf,MAAM,EAA9C,CAAtB;AACA,QAAIkB,OAAJ,EAAa,OAAOA,OAAP;AAChB,GALD,CAKE,OAAOE,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACH;AACJ,CATD;;AAWA,MAAMC,QAAQ,GAAG,MAAOd,IAAP,IAAgB;AAC7B,QAAMW,OAAO,GAAG,MAAMnB,KAAK,CAACuB,IAAN,CAAW,gBAAX,EAA6Bf,IAA7B,CAAtB;AACA,MAAIW,OAAJ,EAAab,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6BpB,IAAI,CAACqB,SAAL,CAAeN,OAAO,CAACO,IAAvB,CAA7B;AACb,SAAOP,OAAP;AACH,CAJD;;AAMA,MAAMQ,KAAK,GAAG,MAAOnB,IAAP,IAAgB;AAC1B,MAAI;AACA,UAAMW,OAAO,GAAG,MAAMnB,KAAK,CAACuB,IAAN,CAAW,aAAX,EAA0Bf,IAA1B,CAAtB;AACA,QAAIW,OAAO,CAACS,MAAR,KAAmB,GAAnB,IAA0BT,OAAO,CAACS,MAAR,KAAmB,GAAjD,EAAsDtB,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6BpB,IAAI,CAACqB,SAAL,CAAeN,OAAO,CAACO,IAAvB,CAA7B;AACtD,WAAOP,OAAP;AACH,GAJD,CAIE,OAAOE,CAAP,EAAU;AACR,WAAO;AAAEO,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAP;AACH;AACJ,CARD;;AASA,OAAO,MAAMC,IAAI,GAAG;AAChBH,EAAAA,KADgB;AAEhBL,EAAAA,QAFgB;AAGhBb,EAAAA,WAHgB;AAIhBM,EAAAA;AAJgB,CAAb","sourcesContent":["import axios from 'axios';\r\nimport { header } from '../helpers'\r\n\r\nconst getCurrentUser = () => {\r\n    let local = JSON.parse(localStorage.getItem('user'))\r\n    return local.user\r\n}\r\nfunction currentUser(input = '') {\r\n    let local = JSON.parse(localStorage.getItem('user'))\r\n    if (local) {\r\n        if (input === 'rol' || input === 'role') return local.user.role\r\n        if (input === 'id') return local.user.id\r\n        if (input === 'token') return local.token.accessToken\r\n        return local;\r\n    }\r\n}\r\n\r\nconst listProyects = async (user) => {\r\n    try {\r\n        const userId = getCurrentUser().id;\r\n        console.log(userId, ' userId')\r\n        const getUser = await axios.get(`/proyects?UserId=${userId}`, header())\r\n        if (getUser) return getUser;\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nconst register = async (user) => {\r\n    const getUser = await axios.post('/auth/register', user)\r\n    if (getUser) localStorage.setItem('user', JSON.stringify(getUser.data));\r\n    return getUser;\r\n}\r\n\r\nconst login = async (user) => {\r\n    try {\r\n        const getUser = await axios.post('/auth/login', user)\r\n        if (getUser.status === 201 || getUser.status === 200) localStorage.setItem('user', JSON.stringify(getUser.data));\r\n        return getUser;\r\n    } catch (e) {\r\n        return { status: 400, message: 'No hay conexión con el servidor' }\r\n    }\r\n}\r\nexport const auth = {\r\n    login,\r\n    register,\r\n    currentUser,\r\n    listProyects\r\n};"]},"metadata":{},"sourceType":"module"}